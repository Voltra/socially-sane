/* eslint-env node */



////////////////////////////////////////////////////////////////////////////////////////////////////
//// IMPORTS
////////////////////////////////////////////////////////////////////////////////////////////////////
const path = require("path");
const webpack = require("webpack");
const DotEnvPlugin = require("dotenv-webpack");
const ManifestPlugin = require("webpack-manifest-plugin");
const { CleanWebpackPlugin } = require("clean-webpack-plugin");
const VueLoaderPlugin = require("vue-loader/lib/plugin");
const WebpackProgessBar = require("webpack-progress-bar");
const FriendlyErrorsWebpackPlugin = require("friendly-errors-webpack-plugin");
const CompressionPlugin = require("compression-webpack-plugin");
const FaviconsWebpackPlugin = require("favicons-webpack-plugin");
const MiniCssExtractPlugin = require("mini-css-extract-plugin");
const dotenvExpand = require("dotenv-expand");
const envResult = require("dotenv-safe").config();



////////////////////////////////////////////////////////////////////////////////////////////////////
//// BASE DEFINITIONS
////////////////////////////////////////////////////////////////////////////////////////////////////
dotenvExpand(envResult);
if(envResult.error)
	throw new Error("Failed to load .env file");

const mode = process.env.NODE_ENV;
const dev = (mode === "development");

/**
 * @type {import("webpack").webpack.Configuration}
 */
const config = {
	mode,
	resolve: {
		alias: {},
		extensions: [],
	},
	entry: {},
	output: {},
	module: { rules: [] },
	plugins: [],
};

const here = src => path.resolve(__dirname, src);
const libraries = /(node_module|bower_component)s/gi;



////////////////////////////////////////////////////////////////////////////////////////////////////
//// TARGET
////////////////////////////////////////////////////////////////////////////////////////////////////
config.target = "web";



////////////////////////////////////////////////////////////////////////////////////////////////////
//// MODULE RESOLUTION
////////////////////////////////////////////////////////////////////////////////////////////////////
const { alias, extensions } = config.resolve;

alias["@"] = here("src/");
alias["@js"] = here("src/");

extensions.push(
	".js",
);



////////////////////////////////////////////////////////////////////////////////////////////////////
//// ENTRIES
////////////////////////////////////////////////////////////////////////////////////////////////////
config.entry.index = "@js/index.js";



////////////////////////////////////////////////////////////////////////////////////////////////////
//// OUTPUTS
////////////////////////////////////////////////////////////////////////////////////////////////////
const { output } = config;
output.path = here("dist/");
output.filename = "[name].js";// `js/[name].bundle.js`; // ${dev ? "" : "[chunkhash:8]."}
output.publicPath = "/assets/";


////////////////////////////////////////////////////////////////////////////////////////////////////
//// DEV TOOLS
////////////////////////////////////////////////////////////////////////////////////////////////////
config.stats = "minimal"; // compatibility w/ friendly errors plugin
config.devtool = dev ? "eval-cheap-module-source-map" : "source-map";



////////////////////////////////////////////////////////////////////////////////////////////////////
//// MODULES/LOADERS
////////////////////////////////////////////////////////////////////////////////////////////////////
const { rules } = config.module;
const jsRegex = /\.[jt]sx?$/i;

rules.push({
	enforce: "pre",
	test: jsRegex,
	exclude: libraries,
	loader: "eslint-loader",
	options: {
		fix: true,
		cache: true,
		quiet: true, // cf. https://webpack.js.org/loaders/eslint-loader/#quiet
		rulesdir: here("eslint-rules"),
	},
});

rules.push({
	test: jsRegex,
	exclude: libraries,
	use: ["babel-loader"],
});



////////////////////////////////////////////////////////////////////////////////////////////////////
//// PLUGINS
////////////////////////////////////////////////////////////////////////////////////////////////////
const { plugins } = config;

plugins.push(new DotEnvPlugin({
	safe: true,
	expand: true,
	allowEmptyValues: false,
	systemvars: false,
}));

plugins.push(new webpack.DefinePlugin({"process.env": JSON.stringify(envResult.parsed)}));

plugins.push(new WebpackProgessBar());

plugins.push(new FriendlyErrorsWebpackPlugin({}));

plugins.push(new CompressionPlugin());

/*plugins.push(new CleanWebpackPlugin({
	verbose: true,
	dry: false,
	cleanOnceBeforeBuildPatterns: ["js/*"],
}));*/



////////////////////////////////////////////////////////////////////////////////////////////////////
//// EXPORT
////////////////////////////////////////////////////////////////////////////////////////////////////
module.exports = config;
